%ifndef BALL_MAC
	%define BALL_MAC
			
	%include "lib/system.mac"
	%include "lib/math.mac"
	%include "lib/float.mac"
	%include "lib/trigon.mac"

	%include "src/lib/constants.asm"

section .data	
	__BALL_X: dd 80.0
	__BALL_Y: dd 80.0
	
	__BALL_RINC: dd 1.0
	
	__BALL_ANGLE: dd 45.0
	__BALL_VAR_ANGLE: dd 15.0
	
	__ball_x: dd 0
	__ball_y: dd 0	
	__ball_radial: dd 10.0		
	__ball_xinc: dd 0
	__ball_yinc: dd 0
	__ball_rinc: dd 0
	__ball_angle: dd 0
	__ball_var_angle: dd 0
	__ball_angle_inc: dw 0
				
%macro ball_initialize 0
section .data
	%%tray_x1: dd 0
	%%tray_y1: dd 0
section .text
	int16tofl __tray_x1, %%tray_x1
	int16tofl __tray_y1, %%tray_y1

	mov32 __ball_x, __BALL_X
	mov32 __ball_y, __BALL_Y	
	fladd __ball_x, %%tray_x1, __ball_x	
	fladd __ball_y, %%tray_y1, __ball_y

	mov32 __ball_rinc, __BALL_RINC	
	toradians __BALL_ANGLE, __ball_angle
	toradians __BALL_VAR_ANGLE, __ball_var_angle
	
	ball_updateangle
%endmacro

%macro ball_move 0
section .data
	%%xb: dd 0
	%%yb: dd 0
	%%x: dw 0
	%%y: dw 0
section .text
	mov32 %%xb, __ball_x
	mov32 %%yb, __ball_y

	fladd %%xb, __ball_xinc, %%xb
	fladd %%yb, __ball_yinc, %%yb
	
	fltoint16 %%xb, %%x
	fltoint16 %%yb, %%y
	
	flcmp %%x, __tray_x1, cl
	cmp cl,0
	jle %%end
	
	flcmp %%x, __tray_x2, cl
	cmp cl,0
	jge %%end
	
	cmp16 %%y, __tray_y1, cl
	cmp cl,0
	jle %%end
	
	cmp16 %%y, __tray_y2, cl
	cmp cl,0
	jge %%end
	
		mov32 __ball_x, %%xb
		mov32 __ball_y, %%yb
		
	%%end:
%endmacro


%macro ball_leftangle 0				
	flinvsig __ball_angle							
	to0x360 __ball_angle	

	validate_subangle cl			
	cmp cl,0
	jnz %%altered			
		flsub __ball_angle, __ball_var_angle, __ball_angle
	%%altered:
	
	ball_updateangle
%endmacro

%macro ball_rightangle 0
	flinvsig __ball_angle	
	to0x360 __ball_angle
			
	validate_addangle cl			
	cmp cl,0
	jnz %%altered	
		fladd __ball_angle, __ball_var_angle, __ball_angle			
	%%altered:
			
	ball_updateangle
%endmacro

%macro validate_addangle 1
section .data
	%%angle: dd 0
	%%270rad: dd 0x4096CBE4
	%%360rad: dd 0x40C90FDB
	%%aux: dd 0
section .text
	mov32 %%angle, __ball_angle
	fladd %%angle, __ball_var_angle, %%angle
		
	mov32 %%aux, %%270rad
	flsub %%aux, __ball_var_angle, %%aux
	flcmp %%angle, %%aux, cl
	cmp cl,0
	jle %%valid

	flcmp %%angle, %%270rad, cl
	cmp cl,0
	jle %%invalid
	
	mov32 %%aux, %%360rad
	flsub %%aux, __ball_var_angle, %%aux
	flcmp %%angle, %%aux, cl
	cmp cl,0
	jle %%valid
	jmp %%invalid
	
	%%valid:
		mov byte %1, 0
		jmp %%end
	%%invalid:
		mov byte %1, 1
	%%end:	
%endmacro

%macro validate_subangle 1
section .data
	%%angle: dd 0
	%%180rad: dd 0x40490FDB
	%%270rad: dd 0x4096CBE4
	%%aux: dd 0
section .text
	mov32 %%angle, __ball_angle
	flsub %%angle, __ball_var_angle, %%angle
	
	mov32 %%aux, %%270rad
	fladd %%aux, __ball_var_angle, %%aux
	flcmp %%angle, %%aux, cl
	cmp cl,0
	jge %%valid			
			
	flcmp %%angle, %%270rad, cl
	cmp cl,0
	jge %%invalid
	
	mov32 %%aux, %%180rad
	fladd %%aux, __ball_var_angle, %%aux
	flcmp %%angle, %%aux, cl
	cmp cl,0
	jge %%valid
	jmp %%invalid
			
	%%valid:
		mov byte %1, 0
		jmp %%end
	%%invalid:
		mov byte %1, 1
	%%end:	
%endmacro

%macro ball_xinvdirection 0
	flinvsig __ball_angle
	to0x360 __ball_angle
	fladd __ball_angle, PI, __ball_angle			
	ball_updateangle
%endmacro

%macro ball_yinvdirection 0
	flinvsig __ball_angle			
	ball_updateangle
%endmacro

%macro ball_updateangle 0
	cos __ball_angle, __ball_xinc	
	sin __ball_angle, __ball_yinc	
		
	flmul __ball_xinc, __ball_rinc, __ball_xinc
	flmul __ball_yinc, __ball_rinc, __ball_yinc	
%endmacro
	
%endif