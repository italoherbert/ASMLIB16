     1                                  %include "lib/disk.mac"
     2                              <1> 
     3                              <1> %ifndef DISK_MAC
     4                              <1> 	%define DISK_MAC
     5                              <1> 
     6                              <1> 	%include "lib/stdio.mac"
     7                              <2> 
     8                              <2> %ifndef STDIO_MAC
     9                              <2> 	%define STDIO_MAC
    10                              <2> 	
    11                              <2> 	%include "lib/stdio.asm"
    12                              <3> 
    13                              <3> %ifndef STDIO_ASM
    14                              <3> 	%define STDIO_ASM
    15                              <3> 	
    16                              <3> 	%include "lib/system.mac"
    17                              <4>  
    18                              <4> %ifndef SYSTEM_MAC
    19                              <4>  	%define SYSTEM_MAC
    20                              <4>  	
    21                              <4> 	%ifndef TRUE
    22                              <4> 		%define TRUE 01h
    23                              <4> 	%endif
    24                              <4> 	%ifndef FALSE
    25                              <4> 		%define FALSE 00h
    26                              <4> 	%endif
    27                              <4> 	
    28                              <4> %macro vlodsb 3
    29                              <4> 	vlodsb cs, %1, %2, %3
    30                              <4> %endmacro
    31                              <4> 
    32                              <4> %macro vstosb 3
    33                              <4> 	vstosb cs, %1, %2, %3
    34                              <4> %endmacro
    35                              <4> 	 	
    36                              <4> %macro int16toreg 2
    37                              <4> 	int16toreg cs, %1, %2
    38                              <4> %endmacro
    39                              <4> 
    40                              <4> %macro regtoint16 2
    41                              <4> 	regtoint16 %1, cs, %2
    42                              <4> %endmacro
    43                              <4> 
    44                              <4> %macro vstosb 4
    45                              <4> 	push %1
    46                              <4> 	pop ds
    47                              <4> 	mov si,%2
    48                              <4> 	add si,%3
    49                              <4> 	mov byte [si],%4	
    50                              <4> %endmacro
    51                              <4> 
    52                              <4> %macro vlodsb 4
    53                              <4> 	push %1
    54                              <4> 	pop ds
    55                              <4> 	mov si,%2
    56                              <4> 	add si,%3
    57                              <4> 	mov byte %4,[si]	
    58                              <4> %endmacro 	 
    59                              <4> 
    60                              <4> %macro int16toreg 3
    61                              <4> 	push %2
    62                              <4> 	push %1
    63                              <4> 	pop ds
    64                              <4> 	pop si
    65                              <4> 	mov word %3,[si]	
    66                              <4> %endmacro
    67                              <4> 
    68                              <4> %macro regtoint16 3
    69                              <4> 	push %3
    70                              <4> 	push %2
    71                              <4> 	pop ds
    72                              <4> 	pop si
    73                              <4> 	mov word [si],%1	
    74                              <4> %endmacro
    75                              <4> 
    76                              <4> %macro mov32 2
    77                              <4> 	mov32 cs, %1, cs, %2
    78                              <4> %endmacro
    79                              <4> 
    80                              <4> %macro mov16 2
    81                              <4> 	mov16 cs, %1, cs, %2
    82                              <4> %endmacro
    83                              <4> 
    84                              <4> %macro mov32 4
    85                              <4> 	mov ax,%3
    86                              <4> 	mov ds,ax
    87                              <4> 	mov cx,[%4+2]
    88                              <4> 	mov dx,[%4]
    89                              <4> 	mov ax,%1
    90                              <4> 	mov ds,ax
    91                              <4> 	mov [%2+2],cx
    92                              <4> 	mov [%2],dx
    93                              <4> %endmacro
    94                              <4> 
    95                              <4> %macro mov16 4
    96                              <4> 	mov ax,%3
    97                              <4> 	mov ds,ax
    98                              <4> 	mov bx,[%4]
    99                              <4> 	mov ax,%1
   100                              <4> 	mov ds,ax
   101                              <4> 	mov [%2],bx
   102                              <4> %endmacro
   103                              <4>  	 	
   104                              <4> %macro mformat 4
   105                              <4> 	stkopen 8
   106                              <4> 	mov word [ bp + 0 ], %1
   107                              <4> 	mov word [ bp + 2 ], %2
   108                              <4> 	mov word [ bp + 4 ], %3
   109                              <4> 	mov word [ bp + 6 ], %4
   110                              <4> 	call kernel_segment:mformat
   111                              <4> 	stkclose 8
   112                              <4> %endmacro
   113                              <4> 
   114                              <4> %macro malloc 6
   115                              <4> 	stkopen 0Bh
   116                              <4> 	mov word [ bp + 4 ], %3
   117                              <4> 	mov word [ bp + 6 ], %4
   118                              <4> 	mov word [ bp + 8 ], %5	
   119                              <4> 	call kernel_segment:malloc
   120                              <4> 	push sp
   121                              <4> 	pop bp
   122                              <4> 	mov word %1, [ bp ]
   123                              <4> 	mov word %2, [ bp + 2 ]
   124                              <4> 	mov byte %6, [ bp + 0x0A ]
   125                              <4> 	stkclose 0Bh
   126                              <4> %endmacro 	
   127                              <4> 
   128                              <4> %macro laddr 2
   129                              <4> 	laddr %1, %2, %1, %2
   130                              <4> %endmacro
   131                              <4> 
   132                              <4> %macro faddr 2
   133                              <4> 	faddr %1, %2, %1, %2
   134                              <4> %endmacro
   135                              <4>  	
   136                              <4> %macro laddr 4
   137                              <4> 	stkopen 8
   138                              <4> 	mov word [ bp + 4 ], %3
   139                              <4> 	mov word [ bp + 6 ], %4	
   140                              <4> 	call kernel_segment:laddr
   141                              <4> 	push sp
   142                              <4> 	pop bp
   143                              <4> 	mov word %1, [ bp + 0 ]
   144                              <4> 	mov word %2, [ bp + 2 ]	
   145                              <4> 	stkclose 8
   146                              <4> %endmacro
   147                              <4> 
   148                              <4> %macro faddr 4
   149                              <4> 	stkopen 8
   150                              <4> 	mov word [ bp + 4 ], %3
   151                              <4> 	mov word [ bp + 6 ], %4	
   152                              <4> 	call kernel_segment:faddr
   153                              <4> 	push sp
   154                              <4> 	pop bp
   155                              <4> 	mov word %1, [ bp + 0 ]
   156                              <4> 	mov word %2, [ bp + 2 ]	
   157                              <4> 	stkclose 8
   158                              <4> %endmacro	
   159                              <4>  
   160                              <4> 
   161                              <4> %macro stkopen 1		
   162                              <4> 	sub word sp, %1
   163                              <4> 	push sp
   164                              <4> 	pop bp
   165                              <4> %endmacro
   166                              <4> 
   167                              <4> %macro stkclose 1
   168                              <4> 	add word sp, %1
   169                              <4> %endmacro
   170                              <4> 
   171                              <4> %macro stkload 1-* 	
   172                              <4>  	%rep %0
   173                              <4>  	 	%rotate -1
   174                              <4>  		pop %1
   175                              <4>  	%endrep
   176                              <4>  	%rep %0
   177                              <4>  		push %1
   178                              <4>  		%rotate 1
   179                              <4>  	%endrep
   180                              <4> %endmacro
   181                              <4> 
   182                              <4> %macro stkpush 1-* 	
   183                              <4>  	%rep %0
   184                              <4>  		push %1
   185                              <4>  		%rotate 1
   186                              <4>  	%endrep 	
   187                              <4> %endmacro
   188                              <4>  
   189                              <4> %macro stkpop 1-*
   190                              <4>  	%rep %0
   191                              <4>  	 	%rotate -1
   192                              <4>  		pop %1
   193                              <4>  	%endrep 	 	
   194                              <4> %endmacro
   195                              <4> 
   196                              <4> %endif 
   197                              <3> 	
   198                              <3> %macro __prtch 1	
   199                              <3> 	stkopen 1	
   200                              <3> 	mov byte [ bp ], %1
   201                              <3> 	call proc_prtch
   202                              <3> 	stkclose 1
   203                              <3> %endmacro
   204                              <3> 
   205                              <3> %macro __prtln 0
   206                              <3> 	call proc_prtln
   207                              <3> %endmacro	
   208                              <3> 
   209                              <3> %macro __prtsubbin8 3
   210                              <3> 	stkopen 3
   211                              <3> 	mov byte [bp+0],%1
   212                              <3> 	mov byte [bp+1],%2
   213                              <3> 	mov byte [bp+2],%3
   214                              <3> 	call proc_prtsubbin8
   215                              <3> 	stkclose 3
   216                              <3> %endmacro
   217                              <3> 	
   218                              <3> section .data
   219                              <3> 	
   220                              <3> proc_prtIEEE754:
   221 00000000 89E0                <3> 	mov ax,sp
   222 00000002 89C5                <3> 	mov bp,ax			
   223 00000004 8B4602              <3> 	mov ax,[bp+2]	
   224 00000007 50                  <3> 	push ax
   225 00000008 50                  <3> 	push ax
   226 00000009 50                  <3> 	push ax
   227 0000000A 50                  <3> 	push ax	
   228 0000000B 50                  <3> 	push ax
   229                              <3> 	
   230                              <3> 	__prtsubbin8 ah,0,1
   231                              <4>  stkopen 3
   232 0000000C 83EC03              <5>  sub word sp, %1
   233 0000000F 54                  <5>  push sp
   234 00000010 5D                  <5>  pop bp
   235 00000011 886600              <4>  mov byte [bp+0],%1
   236 00000014 C6460100            <4>  mov byte [bp+1],%2
   237 00000018 C6460201            <4>  mov byte [bp+2],%3
   238 0000001C E87201              <4>  call proc_prtsubbin8
   239                              <4>  stkclose 3
   240 0000001F 83C403              <5>  add word sp, %1
   241                              <3> 	__prtch 20h
   242                              <4>  stkopen 1
   243 00000022 83EC01              <5>  sub word sp, %1
   244 00000025 54                  <5>  push sp
   245 00000026 5D                  <5>  pop bp
   246 00000027 C6460020            <4>  mov byte [ bp ], %1
   247 0000002B E82004              <4>  call proc_prtch
   248                              <4>  stkclose 1
   249 0000002E 83C401              <5>  add word sp, %1
   250                              <3> 	__prtch 20h
   251                              <4>  stkopen 1
   252 00000031 83EC01              <5>  sub word sp, %1
   253 00000034 54                  <5>  push sp
   254 00000035 5D                  <5>  pop bp
   255 00000036 C6460020            <4>  mov byte [ bp ], %1
   256 0000003A E81104              <4>  call proc_prtch
   257                              <4>  stkclose 1
   258 0000003D 83C401              <5>  add word sp, %1
   259 00000040 58                  <3> 	pop ax
   260                              <3> 	__prtsubbin8 ah,1,5
   261                              <4>  stkopen 3
   262 00000041 83EC03              <5>  sub word sp, %1
   263 00000044 54                  <5>  push sp
   264 00000045 5D                  <5>  pop bp
   265 00000046 886600              <4>  mov byte [bp+0],%1
   266 00000049 C6460101            <4>  mov byte [bp+1],%2
   267 0000004D C6460205            <4>  mov byte [bp+2],%3
   268 00000051 E83D01              <4>  call proc_prtsubbin8
   269                              <4>  stkclose 3
   270 00000054 83C403              <5>  add word sp, %1
   271 00000057 58                  <3> 	pop ax
   272                              <3> 	__prtsubbin8 ah,5,8
   273                              <4>  stkopen 3
   274 00000058 83EC03              <5>  sub word sp, %1
   275 0000005B 54                  <5>  push sp
   276 0000005C 5D                  <5>  pop bp
   277 0000005D 886600              <4>  mov byte [bp+0],%1
   278 00000060 C6460105            <4>  mov byte [bp+1],%2
   279 00000064 C6460208            <4>  mov byte [bp+2],%3
   280 00000068 E82601              <4>  call proc_prtsubbin8
   281                              <4>  stkclose 3
   282 0000006B 83C403              <5>  add word sp, %1
   283                              <3> 	
   284 0000006E 58                  <3> 	pop ax
   285                              <3> 	__prtsubbin8 al,0,1
   286                              <4>  stkopen 3
   287 0000006F 83EC03              <5>  sub word sp, %1
   288 00000072 54                  <5>  push sp
   289 00000073 5D                  <5>  pop bp
   290 00000074 884600              <4>  mov byte [bp+0],%1
   291 00000077 C6460100            <4>  mov byte [bp+1],%2
   292 0000007B C6460201            <4>  mov byte [bp+2],%3
   293 0000007F E80F01              <4>  call proc_prtsubbin8
   294                              <4>  stkclose 3
   295 00000082 83C403              <5>  add word sp, %1
   296                              <3> 	__prtch 20h
   297                              <4>  stkopen 1
   298 00000085 83EC01              <5>  sub word sp, %1
   299 00000088 54                  <5>  push sp
   300 00000089 5D                  <5>  pop bp
   301 0000008A C6460020            <4>  mov byte [ bp ], %1
   302 0000008E E8BD03              <4>  call proc_prtch
   303                              <4>  stkclose 1
   304 00000091 83C401              <5>  add word sp, %1
   305                              <3> 	__prtch 20h
   306                              <4>  stkopen 1
   307 00000094 83EC01              <5>  sub word sp, %1
   308 00000097 54                  <5>  push sp
   309 00000098 5D                  <5>  pop bp
   310 00000099 C6460020            <4>  mov byte [ bp ], %1
   311 0000009D E8AE03              <4>  call proc_prtch
   312                              <4>  stkclose 1
   313 000000A0 83C401              <5>  add word sp, %1
   314 000000A3 58                  <3> 	pop ax
   315                              <3> 	__prtsubbin8 al,1,4
   316                              <4>  stkopen 3
   317 000000A4 83EC03              <5>  sub word sp, %1
   318 000000A7 54                  <5>  push sp
   319 000000A8 5D                  <5>  pop bp
   320 000000A9 884600              <4>  mov byte [bp+0],%1
   321 000000AC C6460101            <4>  mov byte [bp+1],%2
   322 000000B0 C6460204            <4>  mov byte [bp+2],%3
   323 000000B4 E8DA00              <4>  call proc_prtsubbin8
   324                              <4>  stkclose 3
   325 000000B7 83C403              <5>  add word sp, %1
   326                              <3> 	__prtch 20h
   327                              <4>  stkopen 1
   328 000000BA 83EC01              <5>  sub word sp, %1
   329 000000BD 54                  <5>  push sp
   330 000000BE 5D                  <5>  pop bp
   331 000000BF C6460020            <4>  mov byte [ bp ], %1
   332 000000C3 E88803              <4>  call proc_prtch
   333                              <4>  stkclose 1
   334 000000C6 83C401              <5>  add word sp, %1
   335 000000C9 58                  <3> 	pop ax
   336                              <3> 	__prtsubbin8 al,4,8
   337                              <4>  stkopen 3
   338 000000CA 83EC03              <5>  sub word sp, %1
   339 000000CD 54                  <5>  push sp
   340 000000CE 5D                  <5>  pop bp
   341 000000CF 884600              <4>  mov byte [bp+0],%1
   342 000000D2 C6460104            <4>  mov byte [bp+1],%2
   343 000000D6 C6460208            <4>  mov byte [bp+2],%3
   344 000000DA E8B400              <4>  call proc_prtsubbin8
   345                              <4>  stkclose 3
   346 000000DD 83C403              <5>  add word sp, %1
   347                              <3> 	__prtch 20h
   348                              <4>  stkopen 1
   349 000000E0 83EC01              <5>  sub word sp, %1
   350 000000E3 54                  <5>  push sp
   351 000000E4 5D                  <5>  pop bp
   352 000000E5 C6460020            <4>  mov byte [ bp ], %1
   353 000000E9 E86203              <4>  call proc_prtch
   354                              <4>  stkclose 1
   355 000000EC 83C401              <5>  add word sp, %1
   356                              <3> 	
   357 000000EF 89E0                <3> 	mov ax,sp
   358 000000F1 89C5                <3> 	mov bp,ax			
   359 000000F3 8B4604              <3> 	mov ax,[bp+4]
   360 000000F6 50                  <3> 	push ax
   361 000000F7 50                  <3> 	push ax
   362 000000F8 50                  <3> 	push ax
   363                              <3> 	
   364                              <3> 	__prtsubbin8 ah,0,4
   365                              <4>  stkopen 3
   366 000000F9 83EC03              <5>  sub word sp, %1
   367 000000FC 54                  <5>  push sp
   368 000000FD 5D                  <5>  pop bp
   369 000000FE 886600              <4>  mov byte [bp+0],%1
   370 00000101 C6460100            <4>  mov byte [bp+1],%2
   371 00000105 C6460204            <4>  mov byte [bp+2],%3
   372 00000109 E88500              <4>  call proc_prtsubbin8
   373                              <4>  stkclose 3
   374 0000010C 83C403              <5>  add word sp, %1
   375                              <3> 	__prtch 20h
   376                              <4>  stkopen 1
   377 0000010F 83EC01              <5>  sub word sp, %1
   378 00000112 54                  <5>  push sp
   379 00000113 5D                  <5>  pop bp
   380 00000114 C6460020            <4>  mov byte [ bp ], %1
   381 00000118 E83303              <4>  call proc_prtch
   382                              <4>  stkclose 1
   383 0000011B 83C401              <5>  add word sp, %1
   384 0000011E 58                  <3> 	pop ax
   385                              <3> 	__prtsubbin8 ah,4,8
   386                              <4>  stkopen 3
   387 0000011F 83EC03              <5>  sub word sp, %1
   388 00000122 54                  <5>  push sp
   389 00000123 5D                  <5>  pop bp
   390 00000124 886600              <4>  mov byte [bp+0],%1
   391 00000127 C6460104            <4>  mov byte [bp+1],%2
   392 0000012B C6460208            <4>  mov byte [bp+2],%3
   393 0000012F E85F00              <4>  call proc_prtsubbin8
   394                              <4>  stkclose 3
   395 00000132 83C403              <5>  add word sp, %1
   396                              <3> 	__prtch 20h
   397                              <4>  stkopen 1
   398 00000135 83EC01              <5>  sub word sp, %1
   399 00000138 54                  <5>  push sp
   400 00000139 5D                  <5>  pop bp
   401 0000013A C6460020            <4>  mov byte [ bp ], %1
   402 0000013E E80D03              <4>  call proc_prtch
   403                              <4>  stkclose 1
   404 00000141 83C401              <5>  add word sp, %1
   405                              <3> 	
   406 00000144 58                  <3> 	pop ax
   407                              <3> 	__prtsubbin8 al,0,4
   408                              <4>  stkopen 3
   409 00000145 83EC03              <5>  sub word sp, %1
   410 00000148 54                  <5>  push sp
   411 00000149 5D                  <5>  pop bp
   412 0000014A 884600              <4>  mov byte [bp+0],%1
   413 0000014D C6460100            <4>  mov byte [bp+1],%2
   414 00000151 C6460204            <4>  mov byte [bp+2],%3
   415 00000155 E83900              <4>  call proc_prtsubbin8
   416                              <4>  stkclose 3
   417 00000158 83C403              <5>  add word sp, %1
   418                              <3> 	__prtch 20h
   419                              <4>  stkopen 1
   420 0000015B 83EC01              <5>  sub word sp, %1
   421 0000015E 54                  <5>  push sp
   422 0000015F 5D                  <5>  pop bp
   423 00000160 C6460020            <4>  mov byte [ bp ], %1
   424 00000164 E8E702              <4>  call proc_prtch
   425                              <4>  stkclose 1
   426 00000167 83C401              <5>  add word sp, %1
   427 0000016A 58                  <3> 	pop ax
   428                              <3> 	__prtsubbin8 al,4,8
   429                              <4>  stkopen 3
   430 0000016B 83EC03              <5>  sub word sp, %1
   431 0000016E 54                  <5>  push sp
   432 0000016F 5D                  <5>  pop bp
   433 00000170 884600              <4>  mov byte [bp+0],%1
   434 00000173 C6460104            <4>  mov byte [bp+1],%2
   435 00000177 C6460208            <4>  mov byte [bp+2],%3
   436 0000017B E81300              <4>  call proc_prtsubbin8
   437                              <4>  stkclose 3
   438 0000017E 83C403              <5>  add word sp, %1
   439                              <3> 	__prtch 20h
   440                              <4>  stkopen 1
   441 00000181 83EC01              <5>  sub word sp, %1
   442 00000184 54                  <5>  push sp
   443 00000185 5D                  <5>  pop bp
   444 00000186 C6460020            <4>  mov byte [ bp ], %1
   445 0000018A E8C102              <4>  call proc_prtch
   446                              <4>  stkclose 1
   447 0000018D 83C401              <5>  add word sp, %1
   448                              <3> 	
   449 00000190 C3                  <3> 	ret
   450                              <3> 	
   451                              <3> proc_prtsubbin8:
   452 00000191 89E0                <3> 	mov ax,sp
   453 00000193 89C5                <3> 	mov bp,ax
   454                              <3> 	
   455 00000195 8A4602              <3> 	mov al,[bp+2]
   456 00000198 50                  <3> 	push ax
   457                              <3> 	
   458 00000199 8A4E03              <3> 	mov cl,[bp+3]
   459 0000019C 8A6E04              <3> 	mov ch,[bp+4]
   460 0000019F 80FD08              <3> 	cmp ch,8
   461 000001A2 7602                <3> 	jbe .l1	
   462 000001A4 B508                <3> 		mov ch,8
   463                              <3> 	.l1:		
   464 000001A6 38E9                <3> 		cmp cl,ch		
   465 000001A8 731D                <3> 		jae .l2
   466                              <3> 		
   467 000001AA 58                  <3> 		pop ax
   468 000001AB 50                  <3> 		push ax
   469 000001AC D2E0                <3> 		shl al,cl
   470 000001AE C0E807              <3> 		shr al,7		
   471 000001B1 0430                <3> 		add al,30h
   472                              <3> 		
   473 000001B3 51                  <3> 		push cx
   474                              <3> 		__prtch al
   475                              <4>  stkopen 1
   476 000001B4 83EC01              <5>  sub word sp, %1
   477 000001B7 54                  <5>  push sp
   478 000001B8 5D                  <5>  pop bp
   479 000001B9 884600              <4>  mov byte [ bp ], %1
   480 000001BC E88F02              <4>  call proc_prtch
   481                              <4>  stkclose 1
   482 000001BF 83C401              <5>  add word sp, %1
   483 000001C2 59                  <3> 		pop cx
   484                              <3> 		
   485 000001C3 FEC1                <3> 		inc cl
   486 000001C5 EBDF                <3> 		jmp .l1
   487                              <3> 	.l2:	
   488 000001C7 58                  <3> 	pop ax
   489                              <3> 	
   490 000001C8 C3                  <3> 	ret
   491                              <3> 	
   492                              <3> proc_prtbin16:
   493 000001C9 89E0                <3> 	mov ax,sp
   494 000001CB 89C5                <3> 	mov bp,ax
   495                              <3> 		
   496 000001CD 8A7E04              <3> 	mov bh, [bp+4]
   497 000001D0 B300                <3> 	mov bl,0
   498 000001D2 B201                <3> 	mov dl,TRUE
   499 000001D4 30ED                <3> 	xor ch,ch
   500 000001D6 B102                <3> 	mov cl,2
   501                              <3> 	.l1:
   502 000001D8 80F900              <3> 		cmp cl,0
   503 000001DB 744B                <3> 		jz .l2		
   504                              <3> 		
   505 000001DD 55                  <3> 		push bp
   506 000001DE 01CD                <3> 		add bp,cx
   507 000001E0 45                  <3> 		inc bp
   508                              <3> 		
   509 000001E1 0A5E00              <3> 		or byte bl, [bp]
   510 000001E4 08FB                <3> 		or byte bl, bh
   511 000001E6 743B                <3> 		jz .prted											
   512 000001E8 53                  <3> 			push bx
   513 000001E9 51                  <3> 			push cx	
   514 000001EA 80FA01              <3> 			cmp dl, TRUE
   515 000001ED 7402                <3> 			je .first
   516 000001EF EB10                <3> 			jmp .nfirst
   517                              <3> 			.first:
   518 000001F1 B200                <3> 				mov dl, FALSE
   519 000001F3 52                  <3> 				push dx
   520                              <3> 				
   521 000001F4 88FC                <3> 				mov ah, bh
   522 000001F6 8A4600              <3> 				mov byte al, [bp]
   523 000001F9 50                  <3> 				push ax
   524 000001FA E84000              <3> 				call proc_prtbin8
   525 000001FD 58                  <3> 				pop ax
   526                              <3> 							
   527 000001FE 5A                  <3> 				pop dx
   528 000001FF EB0C                <3> 				jmp .endfirst
   529                              <3> 			.nfirst:
   530 00000201 52                  <3> 				push dx
   531                              <3> 				
   532 00000202 B401                <3> 				mov ah, TRUE
   533 00000204 8A4600              <3> 				mov byte al, [bp]
   534 00000207 50                  <3> 				push ax
   535 00000208 E83200              <3> 				call proc_prtbin8
   536 0000020B 58                  <3> 				pop ax
   537                              <3> 								
   538 0000020C 5A                  <3> 				pop dx
   539                              <3> 			.endfirst:	
   540 0000020D 59                  <3> 			pop cx
   541 0000020E 5B                  <3> 			pop bx		
   542                              <3> 			
   543 0000020F 80F901              <3> 			cmp cl,1
   544 00000212 760F                <3> 			jbe .spaceprted
   545                              <3> 				__prtch 20h
   546                              <4>  stkopen 1
   547 00000214 83EC01              <5>  sub word sp, %1
   548 00000217 54                  <5>  push sp
   549 00000218 5D                  <5>  pop bp
   550 00000219 C6460020            <4>  mov byte [ bp ], %1
   551 0000021D E82E02              <4>  call proc_prtch
   552                              <4>  stkclose 1
   553 00000220 83C401              <5>  add word sp, %1
   554                              <3> 			.spaceprted:
   555                              <3> 		.prted:
   556                              <3> 		
   557 00000223 5D                  <3> 		pop bp
   558                              <3> 		
   559 00000224 FEC9                <3> 		dec cl
   560 00000226 EBB0                <3> 		jmp .l1
   561                              <3> 	.l2:
   562                              <3> 	
   563 00000228 80FB00              <3> 	cmp bl,0
   564 0000022B 750F                <3> 	jnz .end
   565                              <3> 		__prtch 30h
   566                              <4>  stkopen 1
   567 0000022D 83EC01              <5>  sub word sp, %1
   568 00000230 54                  <5>  push sp
   569 00000231 5D                  <5>  pop bp
   570 00000232 C6460030            <4>  mov byte [ bp ], %1
   571 00000236 E81502              <4>  call proc_prtch
   572                              <4>  stkclose 1
   573 00000239 83C401              <5>  add word sp, %1
   574                              <3> 	.end:
   575                              <3> 	
   576 0000023C C3                  <3> 	ret	
   577                              <3> 	
   578                              <3> proc_prtbin8:
   579 0000023D 89E0                <3> 	mov ax,sp
   580 0000023F 89C5                <3> 	mov bp,ax
   581 00000241 8A4602              <3> 	mov byte al, [bp+2]
   582 00000244 3C00                <3> 	cmp al, 0
   583 00000246 0F858700            <3> 	jnz .nzero
   584                              <3> 		__prtch 30h
   585                              <4>  stkopen 1
   586 0000024A 83EC01              <5>  sub word sp, %1
   587 0000024D 54                  <5>  push sp
   588 0000024E 5D                  <5>  pop bp
   589 0000024F C6460030            <4>  mov byte [ bp ], %1
   590 00000253 E8F801              <4>  call proc_prtch
   591                              <4>  stkclose 1
   592 00000256 83C401              <5>  add word sp, %1
   593                              <3> 		
   594 00000259 89E0                <3> 		mov ax,sp
   595 0000025B 89C5                <3> 		mov bp,ax
   596 0000025D 8A4603              <3> 		mov byte al, [bp+3]		
   597 00000260 3C00                <3> 		cmp al, FALSE
   598 00000262 0F84C500            <3> 		je .end
   599                              <3> 			__prtch 30h
   600                              <4>  stkopen 1
   601 00000266 83EC01              <5>  sub word sp, %1
   602 00000269 54                  <5>  push sp
   603 0000026A 5D                  <5>  pop bp
   604 0000026B C6460030            <4>  mov byte [ bp ], %1
   605 0000026F E8DC01              <4>  call proc_prtch
   606                              <4>  stkclose 1
   607 00000272 83C401              <5>  add word sp, %1
   608                              <3> 			__prtch 30h
   609                              <4>  stkopen 1
   610 00000275 83EC01              <5>  sub word sp, %1
   611 00000278 54                  <5>  push sp
   612 00000279 5D                  <5>  pop bp
   613 0000027A C6460030            <4>  mov byte [ bp ], %1
   614 0000027E E8CD01              <4>  call proc_prtch
   615                              <4>  stkclose 1
   616 00000281 83C401              <5>  add word sp, %1
   617                              <3> 			__prtch 30h
   618                              <4>  stkopen 1
   619 00000284 83EC01              <5>  sub word sp, %1
   620 00000287 54                  <5>  push sp
   621 00000288 5D                  <5>  pop bp
   622 00000289 C6460030            <4>  mov byte [ bp ], %1
   623 0000028D E8BE01              <4>  call proc_prtch
   624                              <4>  stkclose 1
   625 00000290 83C401              <5>  add word sp, %1
   626                              <3> 			__prtch 30h
   627                              <4>  stkopen 1
   628 00000293 83EC01              <5>  sub word sp, %1
   629 00000296 54                  <5>  push sp
   630 00000297 5D                  <5>  pop bp
   631 00000298 C6460030            <4>  mov byte [ bp ], %1
   632 0000029C E8AF01              <4>  call proc_prtch
   633                              <4>  stkclose 1
   634 0000029F 83C401              <5>  add word sp, %1
   635                              <3> 			__prtch 30h
   636                              <4>  stkopen 1
   637 000002A2 83EC01              <5>  sub word sp, %1
   638 000002A5 54                  <5>  push sp
   639 000002A6 5D                  <5>  pop bp
   640 000002A7 C6460030            <4>  mov byte [ bp ], %1
   641 000002AB E8A001              <4>  call proc_prtch
   642                              <4>  stkclose 1
   643 000002AE 83C401              <5>  add word sp, %1
   644                              <3> 			__prtch 30h
   645                              <4>  stkopen 1
   646 000002B1 83EC01              <5>  sub word sp, %1
   647 000002B4 54                  <5>  push sp
   648 000002B5 5D                  <5>  pop bp
   649 000002B6 C6460030            <4>  mov byte [ bp ], %1
   650 000002BA E89101              <4>  call proc_prtch
   651                              <4>  stkclose 1
   652 000002BD 83C401              <5>  add word sp, %1
   653                              <3> 			__prtch 30h
   654                              <4>  stkopen 1
   655 000002C0 83EC01              <5>  sub word sp, %1
   656 000002C3 54                  <5>  push sp
   657 000002C4 5D                  <5>  pop bp
   658 000002C5 C6460030            <4>  mov byte [ bp ], %1
   659 000002C9 E88201              <4>  call proc_prtch
   660                              <4>  stkclose 1
   661 000002CC 83C401              <5>  add word sp, %1
   662 000002CF EB5A                <3> 			jmp .end		
   663                              <3> 	.nzero:
   664                              <3> 
   665 000002D1 B000                <3> 	mov byte al, FALSE
   666 000002D3 50                  <3> 	push ax
   667                              <3> 
   668 000002D4 89E0                <3> 	mov ax,sp
   669 000002D6 89C5                <3> 	mov bp,ax
   670 000002D8 8A5E04              <3> 	mov byte bl, [bp+4]
   671 000002DB B100                <3> 	mov cl,0
   672                              <3> 	.l1:
   673 000002DD 80F908              <3> 		cmp cl,8
   674 000002E0 7348                <3> 		jae .l2
   675                              <3> 		
   676 000002E2 88C8                <3> 		mov al,cl
   677                              <3> 		
   678 000002E4 88DA                <3> 		mov dl, bl		
   679                              <3> 		
   680                              <3> 		.l1.1:
   681 000002E6 3C00                <3> 			cmp al,0
   682 000002E8 7406                <3> 			jz .l1.2
   683                              <3> 							
   684 000002EA D0E2                <3> 			shl dl,1
   685                              <3> 			
   686 000002EC FEC8                <3> 			dec al
   687 000002EE EBF6                <3> 			jmp .l1.1
   688                              <3> 		.l1.2:
   689                              <3> 						
   690 000002F0 C0EA07              <3> 		shr dl,7
   691                              <3> 		
   692 000002F3 89E0                <3> 		mov ax,sp
   693 000002F5 89C5                <3> 		mov bp,ax			
   694 000002F7 8A4605              <3> 		mov byte al, [bp+5]
   695 000002FA 3C01                <3> 		cmp al, TRUE
   696 000002FC 7413                <3> 		je .endzero		
   697 000002FE 80FA00              <3> 			cmp dl,0
   698 00000301 7402                <3> 			jz .zero
   699 00000303 EB08                <3> 			jmp .notzero
   700                              <3> 			.zero:
   701 00000305 58                  <3> 				pop ax
   702 00000306 50                  <3> 				push ax
   703 00000307 3C01                <3> 				cmp al, TRUE				
   704 00000309 7406                <3> 				je .endzero
   705 0000030B EB19                <3> 				jmp .inc
   706                              <3> 			.notzero:
   707 0000030D 58                  <3> 				pop ax
   708 0000030E B001                <3> 				mov al, TRUE	
   709 00000310 50                  <3> 				push ax				
   710                              <3> 		.endzero:
   711                              <3> 									
   712 00000311 80C230              <3> 		add dl,30h
   713                              <3> 
   714 00000314 51                  <3> 		push cx
   715 00000315 52                  <3> 		push dx
   716                              <3> 		__prtch dl
   717                              <4>  stkopen 1
   718 00000316 83EC01              <5>  sub word sp, %1
   719 00000319 54                  <5>  push sp
   720 0000031A 5D                  <5>  pop bp
   721 0000031B 885600              <4>  mov byte [ bp ], %1
   722 0000031E E82D01              <4>  call proc_prtch
   723                              <4>  stkclose 1
   724 00000321 83C401              <5>  add word sp, %1
   725 00000324 5A                  <3> 		pop dx
   726 00000325 59                  <3> 		pop cx	
   727                              <3> 
   728                              <3> 		.inc:
   729                              <3> 	
   730 00000326 FEC1                <3> 		inc cl
   731 00000328 EBB3                <3> 		jmp .l1	
   732                              <3> 	.l2:
   733                              <3> 	
   734 0000032A 58                  <3> 	pop ax
   735                              <3> 	
   736                              <3> 	.end:
   737                              <3> 	
   738 0000032B C3                  <3> 	ret	
   739                              <3> 
   740                              <3> proc_prthex16:
   741 0000032C 89E0                <3> 	mov ax,sp
   742 0000032E 89C5                <3> 	mov bp,ax
   743                              <3> 
   744 00000330 8A7E04              <3> 	mov byte bh, [bp+4]		
   745 00000333 B300                <3> 	mov bl,0	
   746 00000335 B201                <3> 	mov dl,TRUE
   747 00000337 30ED                <3> 	xor ch,ch
   748 00000339 B102                <3> 	mov cl, 2	
   749                              <3> 	.l1:			
   750 0000033B 80F900              <3> 		cmp cl,0
   751 0000033E 7437                <3> 		jz .l2
   752                              <3> 							
   753 00000340 55                  <3> 		push bp		
   754 00000341 01CD                <3> 		add bp,cx
   755 00000343 45                  <3> 		inc bp		
   756                              <3> 		
   757 00000344 0A5E00              <3> 		or byte bl, [bp]
   758 00000347 08FB                <3> 		or byte bl, bh
   759 00000349 7427                <3> 		jz .prted							
   760 0000034B 53                  <3> 			push bx
   761 0000034C 51                  <3> 			push cx	
   762 0000034D 80FA01              <3> 			cmp dl, TRUE
   763 00000350 7402                <3> 			je .first
   764 00000352 EB10                <3> 			jmp .nfirst
   765                              <3> 			.first:
   766 00000354 B200                <3> 				mov dl, FALSE
   767 00000356 52                  <3> 				push dx
   768                              <3> 				
   769 00000357 88FC                <3> 				mov ah, bh
   770 00000359 8A4600              <3> 				mov byte al, [bp]
   771 0000035C 50                  <3> 				push ax
   772 0000035D E82C00              <3> 				call proc_prthex8
   773 00000360 58                  <3> 				pop ax
   774                              <3> 							
   775 00000361 5A                  <3> 				pop dx
   776 00000362 EB0C                <3> 				jmp .endfirst
   777                              <3> 			.nfirst:
   778 00000364 52                  <3> 				push dx
   779                              <3> 				
   780 00000365 B401                <3> 				mov ah, TRUE
   781 00000367 8A4600              <3> 				mov byte al, [bp]
   782 0000036A 50                  <3> 				push ax
   783 0000036B E81E00              <3> 				call proc_prthex8
   784 0000036E 58                  <3> 				pop ax
   785                              <3> 								
   786 0000036F 5A                  <3> 				pop dx
   787                              <3> 			.endfirst:	
   788 00000370 59                  <3> 			pop cx
   789 00000371 5B                  <3> 			pop bx		
   790                              <3> 		.prted:
   791                              <3> 		
   792 00000372 5D                  <3> 		pop bp
   793                              <3> 	
   794 00000373 FEC9                <3> 		dec cl
   795 00000375 EBC4                <3> 		jmp .l1		
   796                              <3> 	.l2:
   797                              <3> 	
   798 00000377 80FB00              <3> 	cmp bl,0
   799 0000037A 750F                <3> 	jnz .end
   800                              <3> 		__prtch 30h
   801                              <4>  stkopen 1
   802 0000037C 83EC01              <5>  sub word sp, %1
   803 0000037F 54                  <5>  push sp
   804 00000380 5D                  <5>  pop bp
   805 00000381 C6460030            <4>  mov byte [ bp ], %1
   806 00000385 E8C600              <4>  call proc_prtch
   807                              <4>  stkclose 1
   808 00000388 83C401              <5>  add word sp, %1
   809                              <3> 	.end:
   810                              <3> 	
   811 0000038B C3                  <3> 	ret
   812                              <3> 	
   813                              <3> proc_prthex8:
   814 0000038C 89E0                <3> 	mov ax,sp
   815 0000038E 89C5                <3> 	mov bp,ax
   816 00000390 8A4602              <3> 	mov byte al, [bp+2]
   817 00000393 3C00                <3> 	cmp al, 0
   818 00000395 752B                <3> 	jnz .nzero
   819                              <3> 		__prtch 30h
   820                              <4>  stkopen 1
   821 00000397 83EC01              <5>  sub word sp, %1
   822 0000039A 54                  <5>  push sp
   823 0000039B 5D                  <5>  pop bp
   824 0000039C C6460030            <4>  mov byte [ bp ], %1
   825 000003A0 E8AB00              <4>  call proc_prtch
   826                              <4>  stkclose 1
   827 000003A3 83C401              <5>  add word sp, %1
   828                              <3> 		
   829 000003A6 89E0                <3> 		mov ax,sp
   830 000003A8 89C5                <3> 		mov bp,ax
   831 000003AA 8A4603              <3> 		mov byte al, [bp+3]		
   832 000003AD 3C00                <3> 		cmp al, FALSE
   833 000003AF 7476                <3> 		je .end
   834                              <3> 			__prtch 30h
   835                              <4>  stkopen 1
   836 000003B1 83EC01              <5>  sub word sp, %1
   837 000003B4 54                  <5>  push sp
   838 000003B5 5D                  <5>  pop bp
   839 000003B6 C6460030            <4>  mov byte [ bp ], %1
   840 000003BA E89100              <4>  call proc_prtch
   841                              <4>  stkclose 1
   842 000003BD 83C401              <5>  add word sp, %1
   843 000003C0 EB65                <3> 			jmp .end		
   844                              <3> 	.nzero:
   845                              <3> 
   846 000003C2 B000                <3> 	mov byte al, FALSE
   847 000003C4 50                  <3> 	push ax
   848                              <3> 
   849 000003C5 89E0                <3> 	mov ax,sp
   850 000003C7 89C5                <3> 	mov bp,ax
   851 000003C9 8A5E04              <3> 	mov byte bl, [bp+4]
   852 000003CC B102                <3> 	mov cl,2
   853                              <3> 	.l1:
   854 000003CE 80F900              <3> 		cmp cl,0
   855 000003D1 7453                <3> 		jz .l2
   856                              <3> 		
   857 000003D3 B002                <3> 		mov al,2
   858 000003D5 28C8                <3> 		sub al,cl
   859                              <3> 		
   860 000003D7 88DA                <3> 		mov dl, bl	
   861                              <3> 		
   862                              <3> 		.l1.1:
   863 000003D9 3C00                <3> 			cmp al,0
   864 000003DB 7407                <3> 			jz .l1.2
   865                              <3> 							
   866 000003DD C0E204              <3> 			shl dl,4
   867                              <3> 			
   868 000003E0 FEC8                <3> 			dec al
   869 000003E2 EBF5                <3> 			jmp .l1.1
   870                              <3> 		.l1.2:
   871                              <3> 						
   872 000003E4 C0EA04              <3> 		shr dl,4
   873                              <3> 
   874 000003E7 89E0                <3> 		mov ax,sp
   875 000003E9 89C5                <3> 		mov bp,ax			
   876 000003EB 8A4605              <3> 		mov byte al, [bp+5]
   877 000003EE 3C01                <3> 		cmp al, TRUE
   878 000003F0 7413                <3> 		je .endzero		
   879 000003F2 80FA00              <3> 			cmp dl,0
   880 000003F5 7402                <3> 			jz .zero
   881 000003F7 EB08                <3> 			jmp .notzero
   882                              <3> 			.zero:
   883 000003F9 58                  <3> 				pop ax
   884 000003FA 50                  <3> 				push ax
   885 000003FB 3C01                <3> 				cmp al, TRUE				
   886 000003FD 7406                <3> 				je .endzero
   887 000003FF EB21                <3> 				jmp .dec
   888                              <3> 			.notzero:
   889 00000401 58                  <3> 				pop ax
   890 00000402 B001                <3> 				mov al, TRUE	
   891 00000404 50                  <3> 				push ax				
   892                              <3> 		.endzero:
   893                              <3> 						
   894 00000405 80FA09              <3> 		cmp dl,9
   895 00000408 7603                <3> 		jbe .endsumseven  		
   896 0000040A 80C207              <3> 		add dl,7
   897                              <3> 		.endsumseven:
   898                              <3> 						
   899 0000040D 80C230              <3> 		add dl,30h
   900                              <3> 
   901 00000410 51                  <3> 		push cx
   902 00000411 52                  <3> 		push dx
   903                              <3> 		__prtch dl
   904                              <4>  stkopen 1
   905 00000412 83EC01              <5>  sub word sp, %1
   906 00000415 54                  <5>  push sp
   907 00000416 5D                  <5>  pop bp
   908 00000417 885600              <4>  mov byte [ bp ], %1
   909 0000041A E83100              <4>  call proc_prtch
   910                              <4>  stkclose 1
   911 0000041D 83C401              <5>  add word sp, %1
   912 00000420 5A                  <3> 		pop dx
   913 00000421 59                  <3> 		pop cx	
   914                              <3> 
   915                              <3> 		.dec:
   916                              <3> 	
   917 00000422 FEC9                <3> 		dec cl
   918 00000424 EBA8                <3> 		jmp .l1	
   919                              <3> 	.l2:
   920                              <3> 	
   921 00000426 58                  <3> 	pop ax
   922                              <3> 	
   923                              <3> 	.end:
   924                              <3> 	
   925 00000427 C3                  <3> 	ret
   926                              <3> 
   927                              <3> proc_prtstr:
   928 00000428 89E0                <3> 	mov ax,sp
   929 0000042A 89C5                <3> 	mov bp,ax
   930                              <3> 	
   931 0000042C 8B4602              <3> 	mov ax, [bp+2]
   932 0000042F 8ED8                <3> 	mov ds, ax
   933 00000431 8B7604              <3> 	mov si, [bp+4]						
   934                              <3> 	.loop:
   935 00000434 AC                  <3> 		lodsb
   936 00000435 3C00                <3> 		cmp al,0h
   937 00000437 7414                <3> 		jz .done
   938                              <3> 		
   939 00000439 1E                  <3> 		push ds
   940 0000043A 56                  <3> 		push si
   941                              <3> 					
   942                              <3> 		__prtch al										
   943                              <4>  stkopen 1
   944 0000043B 83EC01              <5>  sub word sp, %1
   945 0000043E 54                  <5>  push sp
   946 0000043F 5D                  <5>  pop bp
   947 00000440 884600              <4>  mov byte [ bp ], %1
   948 00000443 E80800              <4>  call proc_prtch
   949                              <4>  stkclose 1
   950 00000446 83C401              <5>  add word sp, %1
   951                              <3> 									
   952 00000449 5E                  <3> 		pop si
   953 0000044A 1F                  <3> 		pop ds
   954                              <3> 											
   955 0000044B EBE7                <3> 		jmp .loop 
   956                              <3> 	.done:
   957                              <3> 	
   958 0000044D C3                  <3> 	ret	
   959                              <3> 	
   960                              <3> proc_prtch:
   961 0000044E 89E0                <3> 	mov ax,sp
   962 00000450 89C5                <3> 	mov bp,ax
   963                              <3> 
   964 00000452 8A4602              <3> 	mov al,[bp+2]
   965 00000455 B40E                <3> 	mov ah,0Eh
   966 00000457 B700                <3> 	mov bh,00h
   967 00000459 CD10                <3> 	int 10h	
   968                              <3> 	
   969 0000045B C3                  <3> 	ret
   970                              <3> 
   971                              <3> proc_prtln:
   972 0000045C B403                <3> 	mov ah,03h
   973 0000045E B700                <3> 	mov bh,00h
   974 00000460 CD10                <3> 	int 10h
   975                              <3> 	
   976 00000462 B402                <3> 	mov ah,02h
   977 00000464 FEC6                <3> 	inc dh
   978 00000466 B200                <3> 	mov dl,00h
   979 00000468 CD10                <3> 	int 10h	
   980                              <3> 	
   981 0000046A C3                  <3> 	ret
   982                              <3> 	
   983                              <3> %endif
   984                              <2>  	%include "lib/system.mac"
   985                              <3>  
   986                              <3> %ifndef SYSTEM_MAC
   987                              <3>  	%define SYSTEM_MAC
   988                              <3>  	
   989                              <3> 	%ifndef TRUE
   990                              <3> 		%define TRUE 01h
   991                              <3> 	%endif
   992                              <3> 	%ifndef FALSE
   993                              <3> 		%define FALSE 00h
   994                              <3> 	%endif
   995                              <3> 	
   996                              <3> %macro vlodsb 3
   997                              <3> 	vlodsb cs, %1, %2, %3
   998                              <3> %endmacro
   999                              <3> 
  1000                              <3> %macro vstosb 3
  1001                              <3> 	vstosb cs, %1, %2, %3
  1002                              <3> %endmacro
  1003                              <3> 	 	
  1004                              <3> %macro int16toreg 2
  1005                              <3> 	int16toreg cs, %1, %2
  1006                              <3> %endmacro
  1007                              <3> 
  1008                              <3> %macro regtoint16 2
  1009                              <3> 	regtoint16 %1, cs, %2
  1010                              <3> %endmacro
  1011                              <3> 
  1012                              <3> %macro vstosb 4
  1013                              <3> 	push %1
  1014                              <3> 	pop ds
  1015                              <3> 	mov si,%2
  1016                              <3> 	add si,%3
  1017                              <3> 	mov byte [si],%4	
  1018                              <3> %endmacro
  1019                              <3> 
  1020                              <3> %macro vlodsb 4
  1021                              <3> 	push %1
  1022                              <3> 	pop ds
  1023                              <3> 	mov si,%2
  1024                              <3> 	add si,%3
  1025                              <3> 	mov byte %4,[si]	
  1026                              <3> %endmacro 	 
  1027                              <3> 
  1028                              <3> %macro int16toreg 3
  1029                              <3> 	push %2
  1030                              <3> 	push %1
  1031                              <3> 	pop ds
  1032                              <3> 	pop si
  1033                              <3> 	mov word %3,[si]	
  1034                              <3> %endmacro
  1035                              <3> 
  1036                              <3> %macro regtoint16 3
  1037                              <3> 	push %3
  1038                              <3> 	push %2
  1039                              <3> 	pop ds
  1040                              <3> 	pop si
  1041                              <3> 	mov word [si],%1	
  1042                              <3> %endmacro
  1043                              <3> 
  1044                              <3> %macro mov32 2
  1045                              <3> 	mov32 cs, %1, cs, %2
  1046                              <3> %endmacro
  1047                              <3> 
  1048                              <3> %macro mov16 2
  1049                              <3> 	mov16 cs, %1, cs, %2
  1050                              <3> %endmacro
  1051                              <3> 
  1052                              <3> %macro mov32 4
  1053                              <3> 	mov ax,%3
  1054                              <3> 	mov ds,ax
  1055                              <3> 	mov cx,[%4+2]
  1056                              <3> 	mov dx,[%4]
  1057                              <3> 	mov ax,%1
  1058                              <3> 	mov ds,ax
  1059                              <3> 	mov [%2+2],cx
  1060                              <3> 	mov [%2],dx
  1061                              <3> %endmacro
  1062                              <3> 
  1063                              <3> %macro mov16 4
  1064                              <3> 	mov ax,%3
  1065                              <3> 	mov ds,ax
  1066                              <3> 	mov bx,[%4]
  1067                              <3> 	mov ax,%1
  1068                              <3> 	mov ds,ax
  1069                              <3> 	mov [%2],bx
  1070                              <3> %endmacro
  1071                              <3>  	 	
  1072                              <3> %macro mformat 4
  1073                              <3> 	stkopen 8
  1074                              <3> 	mov word [ bp + 0 ], %1
  1075                              <3> 	mov word [ bp + 2 ], %2
  1076                              <3> 	mov word [ bp + 4 ], %3
  1077                              <3> 	mov word [ bp + 6 ], %4
  1078                              <3> 	call kernel_segment:mformat
  1079                              <3> 	stkclose 8
  1080                              <3> %endmacro
  1081                              <3> 
  1082                              <3> %macro malloc 6
  1083                              <3> 	stkopen 0Bh
  1084                              <3> 	mov word [ bp + 4 ], %3
  1085                              <3> 	mov word [ bp + 6 ], %4
  1086                              <3> 	mov word [ bp + 8 ], %5	
  1087                              <3> 	call kernel_segment:malloc
  1088                              <3> 	push sp
  1089                              <3> 	pop bp
  1090                              <3> 	mov word %1, [ bp ]
  1091                              <3> 	mov word %2, [ bp + 2 ]
  1092                              <3> 	mov byte %6, [ bp + 0x0A ]
  1093                              <3> 	stkclose 0Bh
  1094                              <3> %endmacro 	
  1095                              <3> 
  1096                              <3> %macro laddr 2
  1097                              <3> 	laddr %1, %2, %1, %2
  1098                              <3> %endmacro
  1099                              <3> 
  1100                              <3> %macro faddr 2
  1101                              <3> 	faddr %1, %2, %1, %2
  1102                              <3> %endmacro
  1103                              <3>  	
  1104                              <3> %macro laddr 4
  1105                              <3> 	stkopen 8
  1106                              <3> 	mov word [ bp + 4 ], %3
  1107                              <3> 	mov word [ bp + 6 ], %4	
  1108                              <3> 	call kernel_segment:laddr
  1109                              <3> 	push sp
  1110                              <3> 	pop bp
  1111                              <3> 	mov word %1, [ bp + 0 ]
  1112                              <3> 	mov word %2, [ bp + 2 ]	
  1113                              <3> 	stkclose 8
  1114                              <3> %endmacro
  1115                              <3> 
  1116                              <3> %macro faddr 4
  1117                              <3> 	stkopen 8
  1118                              <3> 	mov word [ bp + 4 ], %3
  1119                              <3> 	mov word [ bp + 6 ], %4	
  1120                              <3> 	call kernel_segment:faddr
  1121                              <3> 	push sp
  1122                              <3> 	pop bp
  1123                              <3> 	mov word %1, [ bp + 0 ]
  1124                              <3> 	mov word %2, [ bp + 2 ]	
  1125                              <3> 	stkclose 8
  1126                              <3> %endmacro	
  1127                              <3>  
  1128                              <3> 
  1129                              <3> %macro stkopen 1		
  1130                              <3> 	sub word sp, %1
  1131                              <3> 	push sp
  1132                              <3> 	pop bp
  1133                              <3> %endmacro
  1134                              <3> 
  1135                              <3> %macro stkclose 1
  1136                              <3> 	add word sp, %1
  1137                              <3> %endmacro
  1138                              <3> 
  1139                              <3> %macro stkload 1-* 	
  1140                              <3>  	%rep %0
  1141                              <3>  	 	%rotate -1
  1142                              <3>  		pop %1
  1143                              <3>  	%endrep
  1144                              <3>  	%rep %0
  1145                              <3>  		push %1
  1146                              <3>  		%rotate 1
  1147                              <3>  	%endrep
  1148                              <3> %endmacro
  1149                              <3> 
  1150                              <3> %macro stkpush 1-* 	
  1151                              <3>  	%rep %0
  1152                              <3>  		push %1
  1153                              <3>  		%rotate 1
  1154                              <3>  	%endrep 	
  1155                              <3> %endmacro
  1156                              <3>  
  1157                              <3> %macro stkpop 1-*
  1158                              <3>  	%rep %0
  1159                              <3>  	 	%rotate -1
  1160                              <3>  		pop %1
  1161                              <3>  	%endrep 	 	
  1162                              <3> %endmacro
  1163                              <3> 
  1164                              <3> %endif 
  1165                              <2> 
  1166                              <2> ; OBS: Esta macro não deve ser utilizada em procedimentos dinâmicos		
  1167                              <2> %macro printf 1-*	
  1168                              <2> 	%rep %0					
  1169                              <2> 		__printf %1
  1170                              <2> 		%rotate 1		
  1171                              <2> 	%endrep
  1172                              <2> %endmacro	
  1173                              <2> 
  1174                              <2> ; OBS: Esta macro não deve ser utilizada em procedimentos dinâmicos		
  1175                              <2> %macro __printf 1
  1176                              <2> 	section .data
  1177                              <2> 		%%str: db %1,0
  1178                              <2> 	section .text
  1179                              <2> 		prtstr cs, %%str				
  1180                              <2> %endmacro
  1181                              <2> 
  1182                              <2> %macro prtstr 2
  1183                              <2> 	stkopen 4
  1184                              <2> 	mov word [bp], %1
  1185                              <2> 	mov word [bp+2], %2
  1186                              <2> 	call proc_prtstr
  1187                              <2> 	stkclose 4
  1188                              <2> %endmacro
  1189                              <2> 
  1190                              <2> 
  1191                              <2> %macro prtIEEE754 1
  1192                              <2> 	prtIEEE754 cs, %1
  1193                              <2> %endmacro
  1194                              <2> 
  1195                              <2> %macro prtIEEE754 2
  1196                              <2> 	stkopen 4
  1197                              <2> 	mov ax,%1
  1198                              <2> 	mov ds,ax
  1199                              <2> 	mov ax, [%2+2]
  1200                              <2> 	mov word [bp+0], ax
  1201                              <2> 	mov ax, [%2]
  1202                              <2> 	mov word [bp+2], ax
  1203                              <2> 	call proc_prtIEEE754
  1204                              <2> 	stkclose 4
  1205                              <2> %endmacro
  1206                              <2> 
  1207                              <2> %macro prtbool 1	
  1208                              <2> 	cmp byte %1, TRUE
  1209                              <2> 	je .true
  1210                              <2> 	jmp .false
  1211                              <2> 	.true:
  1212                              <2> 		prtf "true"
  1213                              <2> 		jmp .endcmp
  1214                              <2> 	.false:
  1215                              <2> 		prtf "false"
  1216                              <2> 	.endcmp:	
  1217                              <2> %endmacro
  1218                              <2> 
  1219                              <2> %macro prtptr 2-3 TRUE
  1220                              <2> 	stkopen 3
  1221                              <2> 	mov word [ bp + 0 ], %2
  1222                              <2> 	mov byte [ bp + 2 ], %3
  1223                              <2> 	prthex16 %1, %3
  1224                              <2> 	writechar ':'
  1225                              <2> 	push sp
  1226                              <2> 	pop bp
  1227                              <2> 	mov word ax, [ bp + 0 ]
  1228                              <2> 	mov byte bl, [ bp + 2 ]
  1229                              <2> 	prthex16 ax, bl
  1230                              <2> 	stkclose 3
  1231                              <2> %endmacro
  1232                              <2> 
  1233                              <2> %macro prtfptr 2-3 TRUE
  1234                              <2> 	stkopen 3
  1235                              <2> 	mov word [ bp + 0 ], %1
  1236                              <2> 	mov byte [ bp + 2 ], %3
  1237                              <2> 	prthex16 %2, %3
  1238                              <2> 	push sp
  1239                              <2> 	pop bp
  1240                              <2> 	mov word ax, [ bp + 0 ]
  1241                              <2> 	mov byte bl, [ bp + 2 ]
  1242                              <2> 	prthex16 ax, bl
  1243                              <2> 	stkclose 3
  1244                              <2> %endmacro
  1245                              <2> 
  1246                              <2> %macro prtbin32 1
  1247                              <2> 	prtbin32 cs, %1
  1248                              <2> %endmacro
  1249                              <2> 
  1250                              <2> %macro prtbin32 2
  1251                              <2> 	mov ax,%1
  1252                              <2> 	mov ds,ax
  1253                              <2> 	mov word ax,[%2+2]
  1254                              <2> 	prtbin16 ax
  1255                              <2> 	prtch 20h
  1256                              <2> 	mov ax,%1
  1257                              <2> 	mov ds,ax
  1258                              <2> 	mov word ax,[%2]
  1259                              <2> 	prtbin16 ax
  1260                              <2> %endmacro
  1261                              <2> 
  1262                              <2> %macro prthex32 1
  1263                              <2> 	prthex32 cs, %1
  1264                              <2> %endmacro
  1265                              <2> 
  1266                              <2> %macro iprthex32 1
  1267                              <2> 	iprthex32 cs, %1
  1268                              <2> %endmacro
  1269                              <2> 
  1270                              <2> %macro prthex32 2
  1271                              <2> 	mov ax,%1
  1272                              <2> 	mov ds,ax
  1273                              <2> 	mov word ax,[%2+2]
  1274                              <2> 	prthex16 ax	
  1275                              <2> 	mov ax,%1
  1276                              <2> 	mov ds,ax
  1277                              <2> 	mov word ax,[%2]
  1278                              <2> 	prthex16 ax
  1279                              <2> %endmacro
  1280                              <2> 
  1281                              <2> %macro iprthex32 2
  1282                              <2> 	mov ax,%1
  1283                              <2> 	mov ds,ax
  1284                              <2> 	mov word ax,[%2+2]
  1285                              <2> 	mov word bx,ax
  1286                              <2> 	and ax,0x7FFF
  1287                              <2> 	push ax
  1288                              <2> 	and bx,0x8000
  1289                              <2> 	cmp bx,0
  1290                              <2> 	jz %%prt
  1291                              <2> 		prtch '-'		
  1292                              <2> 	%%prt:	
  1293                              <2> 	pop ax
  1294                              <2> 	prthex16 ax
  1295                              <2> 	mov ax,%1
  1296                              <2> 	mov ds,ax
  1297                              <2> 	mov word ax,[%2]
  1298                              <2> 	prthex16 ax	
  1299                              <2> %endmacro
  1300                              <2> 
  1301                              <2> %macro prtsubbin8 3
  1302                              <2> 	__prtsubbin8 %1,%2,%3
  1303                              <2> %endmacro
  1304                              <2> 
  1305                              <2> %macro prtbin16 1
  1306                              <2> 	stkopen 3
  1307                              <2> 	mov word [bp], %1
  1308                              <2> 	mov byte [bp+2], TRUE
  1309                              <2> 	call proc_prtbin16
  1310                              <2> 	stkclose 3
  1311                              <2> %endmacro
  1312                              <2> 
  1313                              <2> %macro prtbin8 1
  1314                              <2> 	stkopen 2
  1315                              <2> 	mov byte [bp], %1
  1316                              <2> 	mov byte [bp+1], TRUE
  1317                              <2> 	call proc_prtbin8
  1318                              <2> 	stkclose 2
  1319                              <2> %endmacro
  1320                              <2> 
  1321                              <2> %macro prthex16 1
  1322                              <2> 	stkopen 3
  1323                              <2> 	mov word [bp], %1
  1324                              <2> 	mov byte [bp+2], TRUE
  1325                              <2> 	call proc_prthex16
  1326                              <2> 	stkclose 3
  1327                              <2> %endmacro
  1328                              <2> 
  1329                              <2> %macro prthex8 1
  1330                              <2> 	stkopen 2
  1331                              <2> 	mov byte [bp], %1
  1332                              <2> 	mov byte [bp+1], TRUE
  1333                              <2> 	call proc_prthex8
  1334                              <2> 	stkclose 2
  1335                              <2> %endmacro
  1336                              <2> 
  1337                              <2> %macro prtch 1
  1338                              <2> 	__prtch %1
  1339                              <2> %endmacro
  1340                              <2> 
  1341                              <2> %macro prtln 0
  1342                              <2> 	__prtln
  1343                              <2> %endmacro	
  1344                              <2> 
  1345                              <2> 
  1346                              <2> %macro prtstk 0
  1347                              <2> 	printf "stack ---> "
  1348                              <2> 	mov ax,sp
  1349                              <2> 	prthex16 ax
  1350                              <2> %endmacro  
  1351                              <2> 
  1352                              <2> %endif
  1353                              <1> 	
  1354                              <1> %macro showdiskparams 1
  1355                              <1> 	printf "Parametros do disco"
  1356                              <1> 	prtln
  1357                              <1> 	prtln
  1358                              <1> 
  1359                              <1> 	mov ah,08h
  1360                              <1> 	mov dl,%1
  1361                              <1> 	int 13h
  1362                              <1> 	
  1363                              <1> 	push dx
  1364                              <1> 	push cx
  1365                              <1> 	push ax
  1366                              <1> 	printf "Status do disco: "
  1367                              <1> 	pop ax
  1368                              <1> 	prthex8 ah
  1369                              <1> 	
  1370                              <1> 	prtln	
  1371                              <1> 	printf "Numero de trilha maximo: "
  1372                              <1> 	
  1373                              <1> 	pop cx
  1374                              <1> 	push cx
  1375                              <1> 	and cl,11000000b
  1376                              <1> 	shr cl,6
  1377                              <1> 	mov ah,cl
  1378                              <1> 	mov al,ch	
  1379                              <1> 	prthex16 ax
  1380                              <1> 	
  1381                              <1> 	prtln
  1382                              <1> 	printf "Numero de setor maximo: "
  1383                              <1> 	
  1384                              <1> 	pop cx
  1385                              <1> 	and cl,00111111b
  1386                              <1> 	prthex8 cl
  1387                              <1> 	
  1388                              <1> 	prtln
  1389                              <1> 	printf "Numero de cabeca maximo: "
  1390                              <1> 	
  1391                              <1> 	pop dx
  1392                              <1> 	push dx
  1393                              <1> 	prthex8 dh
  1394                              <1> 	
  1395                              <1> 	prtln
  1396                              <1> 	printf "Numero de drivers instalados: "
  1397                              <1> 	
  1398                              <1> 	pop dx
  1399                              <1> 	prthex8 dl
  1400                              <1> 
  1401                              <1> %endmacro
  1402                              <1> 
  1403                              <1> ;read ( disp, seek, count, buffer )
  1404                              <1> 
  1405                              <1> 	
  1406                              <1> %endif
  1407                                  			
  1408                                  section .text
  1409                                  	global _start
  1410                                  	
  1411                                  _start:	
  1412                                  	printf "DISKETTE"
  1413                              <1>  %rep %0
  1414                              <1>  __printf %1
  1415                              <1>  %rotate 1
  1416                              <1>  %endrep
  1417                              <2>  __printf %1
  1418                              <3>  section .data
  1419 0000046B 4449534B4554544500  <3>  %%str: db %1,0
  1420                              <3>  section .text
  1421                              <3>  prtstr cs, %%str
  1422                              <4>  stkopen 4
  1423 00000000 83EC04              <5>  sub word sp, %1
  1424 00000003 54                  <5>  push sp
  1425 00000004 5D                  <5>  pop bp
  1426 00000005 8C4E00              <4>  mov word [bp], %1
  1427 00000008 C74602[6B04]        <4>  mov word [bp+2], %2
  1428 0000000D E8(2804)            <4>  call proc_prtstr
  1429                              <4>  stkclose 4
  1430 00000010 83C404              <5>  add word sp, %1
  1431                              <2>  %rotate 1
  1432                                  	prtln
  1433                              <1>  __prtln
  1434 00000013 E8(5C04)            <2>  call proc_prtln
  1435                                  	showdiskparams 00h
  1436                              <1>  printf "Parametros do disco"
  1437                              <2>  %rep %0
  1438                              <2>  __printf %1
  1439                              <2>  %rotate 1
  1440                              <2>  %endrep
  1441                              <3>  __printf %1
  1442                              <4>  section .data
  1443 00000474 506172616D6574726F- <4>  %%str: db %1,0
  1444 0000047D 7320646F2064697363- <4>
  1445 00000486 6F00                <4>
  1446                              <4>  section .text
  1447                              <4>  prtstr cs, %%str
  1448                              <5>  stkopen 4
  1449 00000016 83EC04              <6>  sub word sp, %1
  1450 00000019 54                  <6>  push sp
  1451 0000001A 5D                  <6>  pop bp
  1452 0000001B 8C4E00              <5>  mov word [bp], %1
  1453 0000001E C74602[7404]        <5>  mov word [bp+2], %2
  1454 00000023 E8(2804)            <5>  call proc_prtstr
  1455                              <5>  stkclose 4
  1456 00000026 83C404              <6>  add word sp, %1
  1457                              <3>  %rotate 1
  1458                              <1>  prtln
  1459                              <2>  __prtln
  1460 00000029 E8(5C04)            <3>  call proc_prtln
  1461                              <1>  prtln
  1462                              <2>  __prtln
  1463 0000002C E8(5C04)            <3>  call proc_prtln
  1464                              <1> 
  1465 0000002F B408                <1>  mov ah,08h
  1466 00000031 B200                <1>  mov dl,%1
  1467 00000033 CD13                <1>  int 13h
  1468                              <1> 
  1469 00000035 52                  <1>  push dx
  1470 00000036 51                  <1>  push cx
  1471 00000037 50                  <1>  push ax
  1472                              <1>  printf "Status do disco: "
  1473                              <2>  %rep %0
  1474                              <2>  __printf %1
  1475                              <2>  %rotate 1
  1476                              <2>  %endrep
  1477                              <3>  __printf %1
  1478                              <4>  section .data
  1479 00000488 53746174757320646F- <4>  %%str: db %1,0
  1480 00000491 20646973636F3A2000  <4>
  1481                              <4>  section .text
  1482                              <4>  prtstr cs, %%str
  1483                              <5>  stkopen 4
  1484 00000038 83EC04              <6>  sub word sp, %1
  1485 0000003B 54                  <6>  push sp
  1486 0000003C 5D                  <6>  pop bp
  1487 0000003D 8C4E00              <5>  mov word [bp], %1
  1488 00000040 C74602[8804]        <5>  mov word [bp+2], %2
  1489 00000045 E8(2804)            <5>  call proc_prtstr
  1490                              <5>  stkclose 4
  1491 00000048 83C404              <6>  add word sp, %1
  1492                              <3>  %rotate 1
  1493 0000004B 58                  <1>  pop ax
  1494                              <1>  prthex8 ah
  1495                              <2>  stkopen 2
  1496 0000004C 83EC02              <3>  sub word sp, %1
  1497 0000004F 54                  <3>  push sp
  1498 00000050 5D                  <3>  pop bp
  1499 00000051 886600              <2>  mov byte [bp], %1
  1500 00000054 C6460101            <2>  mov byte [bp+1], TRUE
  1501 00000058 E8(8C03)            <2>  call proc_prthex8
  1502                              <2>  stkclose 2
  1503 0000005B 83C402              <3>  add word sp, %1
  1504                              <1> 
  1505                              <1>  prtln
  1506                              <2>  __prtln
  1507 0000005E E8(5C04)            <3>  call proc_prtln
  1508                              <1>  printf "Numero de trilha maximo: "
  1509                              <2>  %rep %0
  1510                              <2>  __printf %1
  1511                              <2>  %rotate 1
  1512                              <2>  %endrep
  1513                              <3>  __printf %1
  1514                              <4>  section .data
  1515 0000049A 4E756D65726F206465- <4>  %%str: db %1,0
  1516 000004A3 207472696C6861206D- <4>
  1517 000004AC 6178696D6F3A2000    <4>
  1518                              <4>  section .text
  1519                              <4>  prtstr cs, %%str
  1520                              <5>  stkopen 4
  1521 00000061 83EC04              <6>  sub word sp, %1
  1522 00000064 54                  <6>  push sp
  1523 00000065 5D                  <6>  pop bp
  1524 00000066 8C4E00              <5>  mov word [bp], %1
  1525 00000069 C74602[9A04]        <5>  mov word [bp+2], %2
  1526 0000006E E8(2804)            <5>  call proc_prtstr
  1527                              <5>  stkclose 4
  1528 00000071 83C404              <6>  add word sp, %1
  1529                              <3>  %rotate 1
  1530                              <1> 
  1531 00000074 59                  <1>  pop cx
  1532 00000075 51                  <1>  push cx
  1533 00000076 80E1C0              <1>  and cl,11000000b
  1534 00000079 C0E906              <1>  shr cl,6
  1535 0000007C 88CC                <1>  mov ah,cl
  1536 0000007E 88E8                <1>  mov al,ch
  1537                              <1>  prthex16 ax
  1538                              <2>  stkopen 3
  1539 00000080 83EC03              <3>  sub word sp, %1
  1540 00000083 54                  <3>  push sp
  1541 00000084 5D                  <3>  pop bp
  1542 00000085 894600              <2>  mov word [bp], %1
  1543 00000088 C6460201            <2>  mov byte [bp+2], TRUE
  1544 0000008C E8(2C03)            <2>  call proc_prthex16
  1545                              <2>  stkclose 3
  1546 0000008F 83C403              <3>  add word sp, %1
  1547                              <1> 
  1548                              <1>  prtln
  1549                              <2>  __prtln
  1550 00000092 E8(5C04)            <3>  call proc_prtln
  1551                              <1>  printf "Numero de setor maximo: "
  1552                              <2>  %rep %0
  1553                              <2>  __printf %1
  1554                              <2>  %rotate 1
  1555                              <2>  %endrep
  1556                              <3>  __printf %1
  1557                              <4>  section .data
  1558 000004B4 4E756D65726F206465- <4>  %%str: db %1,0
  1559 000004BD 207365746F72206D61- <4>
  1560 000004C6 78696D6F3A2000      <4>
  1561                              <4>  section .text
  1562                              <4>  prtstr cs, %%str
  1563                              <5>  stkopen 4
  1564 00000095 83EC04              <6>  sub word sp, %1
  1565 00000098 54                  <6>  push sp
  1566 00000099 5D                  <6>  pop bp
  1567 0000009A 8C4E00              <5>  mov word [bp], %1
  1568 0000009D C74602[B404]        <5>  mov word [bp+2], %2
  1569 000000A2 E8(2804)            <5>  call proc_prtstr
  1570                              <5>  stkclose 4
  1571 000000A5 83C404              <6>  add word sp, %1
  1572                              <3>  %rotate 1
  1573                              <1> 
  1574 000000A8 59                  <1>  pop cx
  1575 000000A9 80E13F              <1>  and cl,00111111b
  1576                              <1>  prthex8 cl
  1577                              <2>  stkopen 2
  1578 000000AC 83EC02              <3>  sub word sp, %1
  1579 000000AF 54                  <3>  push sp
  1580 000000B0 5D                  <3>  pop bp
  1581 000000B1 884E00              <2>  mov byte [bp], %1
  1582 000000B4 C6460101            <2>  mov byte [bp+1], TRUE
  1583 000000B8 E8(8C03)            <2>  call proc_prthex8
  1584                              <2>  stkclose 2
  1585 000000BB 83C402              <3>  add word sp, %1
  1586                              <1> 
  1587                              <1>  prtln
  1588                              <2>  __prtln
  1589 000000BE E8(5C04)            <3>  call proc_prtln
  1590                              <1>  printf "Numero de cabeca maximo: "
  1591                              <2>  %rep %0
  1592                              <2>  __printf %1
  1593                              <2>  %rotate 1
  1594                              <2>  %endrep
  1595                              <3>  __printf %1
  1596                              <4>  section .data
  1597 000004CD 4E756D65726F206465- <4>  %%str: db %1,0
  1598 000004D6 20636162656361206D- <4>
  1599 000004DF 6178696D6F3A2000    <4>
  1600                              <4>  section .text
  1601                              <4>  prtstr cs, %%str
  1602                              <5>  stkopen 4
  1603 000000C1 83EC04              <6>  sub word sp, %1
  1604 000000C4 54                  <6>  push sp
  1605 000000C5 5D                  <6>  pop bp
  1606 000000C6 8C4E00              <5>  mov word [bp], %1
  1607 000000C9 C74602[CD04]        <5>  mov word [bp+2], %2
  1608 000000CE E8(2804)            <5>  call proc_prtstr
  1609                              <5>  stkclose 4
  1610 000000D1 83C404              <6>  add word sp, %1
  1611                              <3>  %rotate 1
  1612                              <1> 
  1613 000000D4 5A                  <1>  pop dx
  1614 000000D5 52                  <1>  push dx
  1615                              <1>  prthex8 dh
  1616                              <2>  stkopen 2
  1617 000000D6 83EC02              <3>  sub word sp, %1
  1618 000000D9 54                  <3>  push sp
  1619 000000DA 5D                  <3>  pop bp
  1620 000000DB 887600              <2>  mov byte [bp], %1
  1621 000000DE C6460101            <2>  mov byte [bp+1], TRUE
  1622 000000E2 E8(8C03)            <2>  call proc_prthex8
  1623                              <2>  stkclose 2
  1624 000000E5 83C402              <3>  add word sp, %1
  1625                              <1> 
  1626                              <1>  prtln
  1627                              <2>  __prtln
  1628 000000E8 E8(5C04)            <3>  call proc_prtln
  1629                              <1>  printf "Numero de drivers instalados: "
  1630                              <2>  %rep %0
  1631                              <2>  __printf %1
  1632                              <2>  %rotate 1
  1633                              <2>  %endrep
  1634                              <3>  __printf %1
  1635                              <4>  section .data
  1636 000004E7 4E756D65726F206465- <4>  %%str: db %1,0
  1637 000004F0 206472697665727320- <4>
  1638 000004F9 696E7374616C61646F- <4>
  1639 00000502 733A2000            <4>
  1640                              <4>  section .text
  1641                              <4>  prtstr cs, %%str
  1642                              <5>  stkopen 4
  1643 000000EB 83EC04              <6>  sub word sp, %1
  1644 000000EE 54                  <6>  push sp
  1645 000000EF 5D                  <6>  pop bp
  1646 000000F0 8C4E00              <5>  mov word [bp], %1
  1647 000000F3 C74602[E704]        <5>  mov word [bp+2], %2
  1648 000000F8 E8(2804)            <5>  call proc_prtstr
  1649                              <5>  stkclose 4
  1650 000000FB 83C404              <6>  add word sp, %1
  1651                              <3>  %rotate 1
  1652                              <1> 
  1653 000000FE 5A                  <1>  pop dx
  1654                              <1>  prthex8 dl
  1655                              <2>  stkopen 2
  1656 000000FF 83EC02              <3>  sub word sp, %1
  1657 00000102 54                  <3>  push sp
  1658 00000103 5D                  <3>  pop bp
  1659 00000104 885600              <2>  mov byte [bp], %1
  1660 00000107 C6460101            <2>  mov byte [bp+1], TRUE
  1661 0000010B E8(8C03)            <2>  call proc_prthex8
  1662                              <2>  stkclose 2
  1663 0000010E 83C402              <3>  add word sp, %1
  1664                              <1> 
  1665                                  	
  1666                                  	prtln
  1667                              <1>  __prtln
  1668 00000111 E8(5C04)            <2>  call proc_prtln
  1669                                  	prtln
  1670                              <1>  __prtln
  1671 00000114 E8(5C04)            <2>  call proc_prtln
  1672                                  	printf "PENDRIVE"
  1673                              <1>  %rep %0
  1674                              <1>  __printf %1
  1675                              <1>  %rotate 1
  1676                              <1>  %endrep
  1677                              <2>  __printf %1
  1678                              <3>  section .data
  1679 00000506 50454E445249564500  <3>  %%str: db %1,0
  1680                              <3>  section .text
  1681                              <3>  prtstr cs, %%str
  1682                              <4>  stkopen 4
  1683 00000117 83EC04              <5>  sub word sp, %1
  1684 0000011A 54                  <5>  push sp
  1685 0000011B 5D                  <5>  pop bp
  1686 0000011C 8C4E00              <4>  mov word [bp], %1
  1687 0000011F C74602[0605]        <4>  mov word [bp+2], %2
  1688 00000124 E8(2804)            <4>  call proc_prtstr
  1689                              <4>  stkclose 4
  1690 00000127 83C404              <5>  add word sp, %1
  1691                              <2>  %rotate 1
  1692                                  	prtln
  1693                              <1>  __prtln
  1694 0000012A E8(5C04)            <2>  call proc_prtln
  1695                                  	showdiskparams 80h
  1696                              <1>  printf "Parametros do disco"
  1697                              <2>  %rep %0
  1698                              <2>  __printf %1
  1699                              <2>  %rotate 1
  1700                              <2>  %endrep
  1701                              <3>  __printf %1
  1702                              <4>  section .data
  1703 0000050F 506172616D6574726F- <4>  %%str: db %1,0
  1704 00000518 7320646F2064697363- <4>
  1705 00000521 6F00                <4>
  1706                              <4>  section .text
  1707                              <4>  prtstr cs, %%str
  1708                              <5>  stkopen 4
  1709 0000012D 83EC04              <6>  sub word sp, %1
  1710 00000130 54                  <6>  push sp
  1711 00000131 5D                  <6>  pop bp
  1712 00000132 8C4E00              <5>  mov word [bp], %1
  1713 00000135 C74602[0F05]        <5>  mov word [bp+2], %2
  1714 0000013A E8(2804)            <5>  call proc_prtstr
  1715                              <5>  stkclose 4
  1716 0000013D 83C404              <6>  add word sp, %1
  1717                              <3>  %rotate 1
  1718                              <1>  prtln
  1719                              <2>  __prtln
  1720 00000140 E8(5C04)            <3>  call proc_prtln
  1721                              <1>  prtln
  1722                              <2>  __prtln
  1723 00000143 E8(5C04)            <3>  call proc_prtln
  1724                              <1> 
  1725 00000146 B408                <1>  mov ah,08h
  1726 00000148 B280                <1>  mov dl,%1
  1727 0000014A CD13                <1>  int 13h
  1728                              <1> 
  1729 0000014C 52                  <1>  push dx
  1730 0000014D 51                  <1>  push cx
  1731 0000014E 50                  <1>  push ax
  1732                              <1>  printf "Status do disco: "
  1733                              <2>  %rep %0
  1734                              <2>  __printf %1
  1735                              <2>  %rotate 1
  1736                              <2>  %endrep
  1737                              <3>  __printf %1
  1738                              <4>  section .data
  1739 00000523 53746174757320646F- <4>  %%str: db %1,0
  1740 0000052C 20646973636F3A2000  <4>
  1741                              <4>  section .text
  1742                              <4>  prtstr cs, %%str
  1743                              <5>  stkopen 4
  1744 0000014F 83EC04              <6>  sub word sp, %1
  1745 00000152 54                  <6>  push sp
  1746 00000153 5D                  <6>  pop bp
  1747 00000154 8C4E00              <5>  mov word [bp], %1
  1748 00000157 C74602[2305]        <5>  mov word [bp+2], %2
  1749 0000015C E8(2804)            <5>  call proc_prtstr
  1750                              <5>  stkclose 4
  1751 0000015F 83C404              <6>  add word sp, %1
  1752                              <3>  %rotate 1
  1753 00000162 58                  <1>  pop ax
  1754                              <1>  prthex8 ah
  1755                              <2>  stkopen 2
  1756 00000163 83EC02              <3>  sub word sp, %1
  1757 00000166 54                  <3>  push sp
  1758 00000167 5D                  <3>  pop bp
  1759 00000168 886600              <2>  mov byte [bp], %1
  1760 0000016B C6460101            <2>  mov byte [bp+1], TRUE
  1761 0000016F E8(8C03)            <2>  call proc_prthex8
  1762                              <2>  stkclose 2
  1763 00000172 83C402              <3>  add word sp, %1
  1764                              <1> 
  1765                              <1>  prtln
  1766                              <2>  __prtln
  1767 00000175 E8(5C04)            <3>  call proc_prtln
  1768                              <1>  printf "Numero de trilha maximo: "
  1769                              <2>  %rep %0
  1770                              <2>  __printf %1
  1771                              <2>  %rotate 1
  1772                              <2>  %endrep
  1773                              <3>  __printf %1
  1774                              <4>  section .data
  1775 00000535 4E756D65726F206465- <4>  %%str: db %1,0
  1776 0000053E 207472696C6861206D- <4>
  1777 00000547 6178696D6F3A2000    <4>
  1778                              <4>  section .text
  1779                              <4>  prtstr cs, %%str
  1780                              <5>  stkopen 4
  1781 00000178 83EC04              <6>  sub word sp, %1
  1782 0000017B 54                  <6>  push sp
  1783 0000017C 5D                  <6>  pop bp
  1784 0000017D 8C4E00              <5>  mov word [bp], %1
  1785 00000180 C74602[3505]        <5>  mov word [bp+2], %2
  1786 00000185 E8(2804)            <5>  call proc_prtstr
  1787                              <5>  stkclose 4
  1788 00000188 83C404              <6>  add word sp, %1
  1789                              <3>  %rotate 1
  1790                              <1> 
  1791 0000018B 59                  <1>  pop cx
  1792 0000018C 51                  <1>  push cx
  1793 0000018D 80E1C0              <1>  and cl,11000000b
  1794 00000190 C0E906              <1>  shr cl,6
  1795 00000193 88CC                <1>  mov ah,cl
  1796 00000195 88E8                <1>  mov al,ch
  1797                              <1>  prthex16 ax
  1798                              <2>  stkopen 3
  1799 00000197 83EC03              <3>  sub word sp, %1
  1800 0000019A 54                  <3>  push sp
  1801 0000019B 5D                  <3>  pop bp
  1802 0000019C 894600              <2>  mov word [bp], %1
  1803 0000019F C6460201            <2>  mov byte [bp+2], TRUE
  1804 000001A3 E8(2C03)            <2>  call proc_prthex16
  1805                              <2>  stkclose 3
  1806 000001A6 83C403              <3>  add word sp, %1
  1807                              <1> 
  1808                              <1>  prtln
  1809                              <2>  __prtln
  1810 000001A9 E8(5C04)            <3>  call proc_prtln
  1811                              <1>  printf "Numero de setor maximo: "
  1812                              <2>  %rep %0
  1813                              <2>  __printf %1
  1814                              <2>  %rotate 1
  1815                              <2>  %endrep
  1816                              <3>  __printf %1
  1817                              <4>  section .data
  1818 0000054F 4E756D65726F206465- <4>  %%str: db %1,0
  1819 00000558 207365746F72206D61- <4>
  1820 00000561 78696D6F3A2000      <4>
  1821                              <4>  section .text
  1822                              <4>  prtstr cs, %%str
  1823                              <5>  stkopen 4
  1824 000001AC 83EC04              <6>  sub word sp, %1
  1825 000001AF 54                  <6>  push sp
  1826 000001B0 5D                  <6>  pop bp
  1827 000001B1 8C4E00              <5>  mov word [bp], %1
  1828 000001B4 C74602[4F05]        <5>  mov word [bp+2], %2
  1829 000001B9 E8(2804)            <5>  call proc_prtstr
  1830                              <5>  stkclose 4
  1831 000001BC 83C404              <6>  add word sp, %1
  1832                              <3>  %rotate 1
  1833                              <1> 
  1834 000001BF 59                  <1>  pop cx
  1835 000001C0 80E13F              <1>  and cl,00111111b
  1836                              <1>  prthex8 cl
  1837                              <2>  stkopen 2
  1838 000001C3 83EC02              <3>  sub word sp, %1
  1839 000001C6 54                  <3>  push sp
  1840 000001C7 5D                  <3>  pop bp
  1841 000001C8 884E00              <2>  mov byte [bp], %1
  1842 000001CB C6460101            <2>  mov byte [bp+1], TRUE
  1843 000001CF E8(8C03)            <2>  call proc_prthex8
  1844                              <2>  stkclose 2
  1845 000001D2 83C402              <3>  add word sp, %1
  1846                              <1> 
  1847                              <1>  prtln
  1848                              <2>  __prtln
  1849 000001D5 E8(5C04)            <3>  call proc_prtln
  1850                              <1>  printf "Numero de cabeca maximo: "
  1851                              <2>  %rep %0
  1852                              <2>  __printf %1
  1853                              <2>  %rotate 1
  1854                              <2>  %endrep
  1855                              <3>  __printf %1
  1856                              <4>  section .data
  1857 00000568 4E756D65726F206465- <4>  %%str: db %1,0
  1858 00000571 20636162656361206D- <4>
  1859 0000057A 6178696D6F3A2000    <4>
  1860                              <4>  section .text
  1861                              <4>  prtstr cs, %%str
  1862                              <5>  stkopen 4
  1863 000001D8 83EC04              <6>  sub word sp, %1
  1864 000001DB 54                  <6>  push sp
  1865 000001DC 5D                  <6>  pop bp
  1866 000001DD 8C4E00              <5>  mov word [bp], %1
  1867 000001E0 C74602[6805]        <5>  mov word [bp+2], %2
  1868 000001E5 E8(2804)            <5>  call proc_prtstr
  1869                              <5>  stkclose 4
  1870 000001E8 83C404              <6>  add word sp, %1
  1871                              <3>  %rotate 1
  1872                              <1> 
  1873 000001EB 5A                  <1>  pop dx
  1874 000001EC 52                  <1>  push dx
  1875                              <1>  prthex8 dh
  1876                              <2>  stkopen 2
  1877 000001ED 83EC02              <3>  sub word sp, %1
  1878 000001F0 54                  <3>  push sp
  1879 000001F1 5D                  <3>  pop bp
  1880 000001F2 887600              <2>  mov byte [bp], %1
  1881 000001F5 C6460101            <2>  mov byte [bp+1], TRUE
  1882 000001F9 E8(8C03)            <2>  call proc_prthex8
  1883                              <2>  stkclose 2
  1884 000001FC 83C402              <3>  add word sp, %1
  1885                              <1> 
  1886                              <1>  prtln
  1887                              <2>  __prtln
  1888 000001FF E8(5C04)            <3>  call proc_prtln
  1889                              <1>  printf "Numero de drivers instalados: "
  1890                              <2>  %rep %0
  1891                              <2>  __printf %1
  1892                              <2>  %rotate 1
  1893                              <2>  %endrep
  1894                              <3>  __printf %1
  1895                              <4>  section .data
  1896 00000582 4E756D65726F206465- <4>  %%str: db %1,0
  1897 0000058B 206472697665727320- <4>
  1898 00000594 696E7374616C61646F- <4>
  1899 0000059D 733A2000            <4>
  1900                              <4>  section .text
  1901                              <4>  prtstr cs, %%str
  1902                              <5>  stkopen 4
  1903 00000202 83EC04              <6>  sub word sp, %1
  1904 00000205 54                  <6>  push sp
  1905 00000206 5D                  <6>  pop bp
  1906 00000207 8C4E00              <5>  mov word [bp], %1
  1907 0000020A C74602[8205]        <5>  mov word [bp+2], %2
  1908 0000020F E8(2804)            <5>  call proc_prtstr
  1909                              <5>  stkclose 4
  1910 00000212 83C404              <6>  add word sp, %1
  1911                              <3>  %rotate 1
  1912                              <1> 
  1913 00000215 5A                  <1>  pop dx
  1914                              <1>  prthex8 dl
  1915                              <2>  stkopen 2
  1916 00000216 83EC02              <3>  sub word sp, %1
  1917 00000219 54                  <3>  push sp
  1918 0000021A 5D                  <3>  pop bp
  1919 0000021B 885600              <2>  mov byte [bp], %1
  1920 0000021E C6460101            <2>  mov byte [bp+1], TRUE
  1921 00000222 E8(8C03)            <2>  call proc_prthex8
  1922                              <2>  stkclose 2
  1923 00000225 83C402              <3>  add word sp, %1
  1924                              <1> 
  1925 00000228 B400                    	mov ah,0
  1926 0000022A CD16                    	int 16h
  1927                                  	
  1928 0000022C EBFE                    	jmp $
